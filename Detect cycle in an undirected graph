class Solution {

	public static boolean dfs(ArrayList<ArrayList<Integer>> g, int x, int p, boolean[] vis) {
		if(vis[x] == true) return false;

		vis[x] = true;
		boolean ans = true;
		for(int i = 0; i < g.get(x).size(); i++) {
			int y = g.get(x).get(i);

			if(y == p) continue;

			boolean temp = dfs(g, y, x, vis);
			ans = ans & temp;
		}

		return ans;
	}
	
    public static boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
       // Your code here
		int n = V;
		boolean vis[] = new boolean[n];

		boolean ans = true;

		for(int i = 0; i < n; i++) {
			if(vis[i] == false) {
				boolean temp = dfs(adj, i, -1, vis);
				ans = ans & temp;
			}
		}

		return !ans;
    }
}

